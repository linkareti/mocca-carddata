<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2011 by Graz University of Technology, Austria
  MOCCA has been developed by the E-Government Innovation Center EGIZ, a joint
  initiative of the Federal Chancellery Austria and Graz University of Technology.

  Licensed under the EUPL, Version 1.1 or - as soon they will be approved by
  the European Commission - subsequent versions of the EUPL (the "Licence");
  You may not use this work except in compliance with the Licence.
  You may obtain a copy of the Licence at:
  http://www.osor.eu/eupl/

  Unless required by applicable law or agreed to in writing, software
  distributed under the Licence is distributed on an "AS IS" basis,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the Licence for the specific language governing permissions and
  limitations under the Licence.

  This product combines work with different licenses. See the "NOTICE" text
  file for details on the various modules and licenses.
  The "NOTICE" text file is part of the distribution. Any derivative works
  that you distribute must include a readable copy of the "NOTICE" text file.
-->
<definitions name="stal" targetNamespace="http://www.egiz.gv.at/wsdl/stal"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://www.egiz.gv.at/wsdl/stal"
    xmlns:stal="http://www.egiz.gv.at/stal"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
    <types>
        <xsd:schema targetNamespace="http://www.egiz.gv.at/wsdl/stal">
            <xsd:import namespace="http://www.egiz.gv.at/stal" schemaLocation="stal.xsd"/>
            <!--xsd:import namespace="http://www.egiz.gv.at/stal" schemaLocation="stal-extended.xsd"/-->
        </xsd:schema>
        <!-- test 
        <xsd:schema targetNamespace="http://www.egiz.gv.at/wsdl/stal-extended">
            <xsd:import namespace="http://www.buergerkarte.at/cardchannel" schemaLocation="CardChannel.xsd"/>
        </xsd:schema-->
    </types>
    <message name="ConnectRequest">
        <part name="part1" element="stal:SessionId"/>
    </message>
    <message name="NextRequestRequest">
        <part name="part1" element="stal:GetNextRequest"/>
    </message>
    <message name="NextRequestResponse">
        <part name="part1" element="stal:GetNextRequestResponse"/>
    </message>
    <message name="GetHashDataInputRequest">
        <part name="part1" element="stal:GetHashDataInput"/>
    </message>
    <message name="GetHashDataInputResponse">
        <part name="part1" element="stal:GetHashDataInputResponse"/>
    </message>
    <message name="GetHashDataInputFault">
        <part name="part1" element="stal:GetHashDataInputFault"/>
    </message>
    <portType name="STALPortType">
        <operation name="connect">
            <input name="input3" message="tns:ConnectRequest"/>
            <output name="output3" message="tns:NextRequestResponse"/>
        </operation>
        <operation name="nextRequest">
            <input name="input1" message="tns:NextRequestRequest"/>
            <output name="output1" message="tns:NextRequestResponse"/>
        </operation>
        <operation name="getHashDataInput">
            <input name="input2" message="tns:GetHashDataInputRequest"/>
            <output name="output2" message="tns:GetHashDataInputResponse"/>
            <fault name="fault1" message="tns:GetHashDataInputFault"/>
        </operation>
    </portType>
    <binding name="STALBinding" type="tns:STALPortType">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="connect">
            <input name="input3">
              <soap:body use="literal"/>
            </input>
            <output name="output3">
              <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="nextRequest">
            <soap:operation/>
            <input name="input1">
                <soap:body use="literal"/>
            </input>
            <output name="output1">
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="getHashDataInput">
            <soap:operation/>
            <input name="input2">
                <soap:body use="literal"/>
            </input>
            <output name="output2">
                <soap:body use="literal"/>
            </output>
            <fault name="fault1">
                <soap:fault name="fault1"/>
            </fault>
        </operation>
    </binding>
    <service name="STALService">
        <port name="STALPort" binding="tns:STALBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/stal"/>
        </port>
    </service>
</definitions>
