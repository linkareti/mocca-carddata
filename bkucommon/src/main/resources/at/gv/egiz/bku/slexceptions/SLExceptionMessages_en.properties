# Copyright 2011 by Graz University of Technology, Austria
# MOCCA has been developed by the E-Government Innovation Center EGIZ, a joint
# initiative of the Federal Chancellery Austria and Graz University of Technology.
#
# Licensed under the EUPL, Version 1.1 or - as soon they will be approved by
# the European Commission - subsequent versions of the EUPL (the "Licence");
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
# http://www.osor.eu/eupl/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
#
# This product combines work with different licenses. See the "NOTICE" text
# file for details on the various modules and licenses.
# The "NOTICE" text file is part of the distribution. Any derivative works
# that you distribute must include a readable copy of the "NOTICE" text file.

test.noerror=This is a test error-message. No error occurred.

ec1000=Unclassified error.
ec2000=Unclassified error in the transport binding.
ec2001=HTTP/HTTPS binding: DataURL cannot be resolved.
ec2002=HTTP/HTTPS binding: StylesheetURL cannot be resolved.
ec2003=HTTP/HTTPS binding: RedirectURL cannot be resolved.
ec2004=HTTP/HTTPS binding: XMLRequest parameter missing.
ec2005=HTTP/HTTPS binding: Unknown parameter encoding.
ec2006=HTTP/HTTPS binding: Incorrect parameter encoding.
ec2007=HTTP/HTTPS binding: DataURL server transmits error or unexpected response.
ec2008=HTTP/HTTPS binding: Error in stylesheet obtained from the StylesheetURL.
ec2009=HTTP/HTTPS binding: HTTP request to local CCE directed to unauthorised URL.
ec2010=HTTPS binding: Error while establishing the TLS connection.
ec3000=Unclassified error in the XML structure of the command request.
ec3001=XML structure of the command request is not well formed.
ec3002=XML structure of the command request does not comply with the Security Layer schema.
ec3003=XML structure of the command request contains an invalid combination of optional elements or attributes.
ec3004=XML structure contains an element or attribute whose syntax does not match the Security Layer specification.
ec3005=Protocol version of Security Layer not supported.
ec4000=Unclassified error while processing command.
ec4001=Unknown key box identifier.
ec4002=Unknown info box identifier.
ec4003=Date to be signed cannot be resolved.
ec4004=Supplementary object cannot be resolved.
ec4005=Date to be encrypted cannot be resolved.
ec4006=Algorithm (signature, encryption, digest, canonicalisation, transformation) not supported.
ec4007=Error while executing algorithm (signature, encryption, digest, canonicalisation, transformation).
ec4008=Error while parsing CMS message
ec4009=No matching decryption key.
ec4010=Info box command parameters do not match info box type.
ec4011=Command not implemented.
ec4100=XML document in which the signature is to be integrated cannot be resolved.
ec4101=XML document in which the signature is to be integrated cannot be parsed.
ec4102=Signature cannot be integrated in the existing XML document at the specified location.
ec4103=Signature certificate not contained in the CMS signature.
ec4104=Signed data not contained in the CMS signature or XML request.
ec4105=XML document containing the signature to be verified cannot be resolved.
ec4106=XML document containing the signature to be verified cannot be parsed.
ec4107=There is no XML signature at the specified location within the XML document.
ec4108=Encrypted date cannot be inserted in the existing XML document at the specified location.
ec4109=Existing XML document is required but missing.
ec4110=Existing XML document cannot be resolved.
ec4111=Existing XML document cannot be parsed.
ec4112=Encrypted data encryption keys cannot be inserted in the existing XML document at the specified location.
ec4113=Data to be decrypted not contained in either the CMS message or XML request.
ec4114=XML document to be decrypted cannot be resolved.
ec4115=XML document to be decrypted cannot be parsed.
ec4116=At least one specified encryption element cannot be found in the XML document to be decrypted.
ec4117=No encryption element for binary response.
ec4118=Date to be hashed cannot be resolved.
ec4119=Date for which the hash value is to be verified cannot be resolved.
ec4120=Selected info box identifier already allocated.
ec4121=Info box with specified identifier does not exist.
ec4122=Contents of the selected info box cannot be displayed as XML.
ec4123=Associative array: No entry for the specified key.
ec4500=The session expired.
ec5000=Unclassified error in the viewer component.
ec5001=Display of data of the mime type specified in the command request not supported.
ec5002=Character encoding of the data to be displayed is invalid or not supported.
ec5003=Data to be displayed contains unsupported characters.
ec5004=Standard display format: HTML does not conform to specification.
ec5005=Standard display format: CSS does not conform to specification.
ec5006=Standard display format: Format of an embedded image does not conform to specification.
ec5007=Standard display format: Signature for embedded images missing or does not conform to specification.
ec6000=Unclassified cancelling by the citizen.
ec6001=Cancelled by the citizen via the user interface.
ec6002=Cancelled because of insufficient rights to execute command.

# 3xxx
#

ec3000.unclassified=Error in the XML structure of the command request. {0}
ec3002.invalid=XML structure of the command request does not comply with the Security Layer schema. {0} 

# 4xxx
#

ec4000.infobox.invalid=The infobox {0} contains invalid content.
ec4000.idlink.transfomation.failed=Failed to transform CompressedIdentityLink with Stylesheet {0}.
ec4002.infobox.unknown=Unknown info box identifier {0}.
ec4003.not.resolved=Data to be signed cannot be resolved from URI={0}.
ec4011.notimplemented=Command {0} not implemented.

# Legacy error codes
#
lec2901.notimplemented=The version ({0}) of the security-layer protocol used in the request is not supported.
